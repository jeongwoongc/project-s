#!/bin/bash
# Quick UI testing script for FlowViz

set -e

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${BLUE}üåå FlowViz UI Testing Script${NC}"
echo "================================="
echo ""

# Check if we're in the right directory
if [ ! -f "FlowViz.xcodeproj/project.pbxproj" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Please run this script from the flowviz directory${NC}"
    exit 1
fi

# Check if Xcode is available
if ! command -v xcodebuild &> /dev/null; then
    echo -e "${YELLOW}‚ö†Ô∏è  Xcode command line tools not found${NC}"
    echo "Install with: xcode-select --install"
    exit 1
fi

echo -e "${GREEN}‚úÖ Found Xcode project${NC}"

# Check project structure
echo -e "${BLUE}üìÅ Checking project structure...${NC}"
required_files=(
    "FlowViz/FlowVizApp.swift"
    "FlowViz/ContentView.swift"
    "FlowViz/ViewModel.swift"
    "FlowViz/TestData.swift"
    "FlowViz/Renderer/MetalRenderer.swift"
    "FlowViz/Renderer/Shaders.metal"
    "FlowViz/UX/ControlsPanel.swift"
    "FlowViz/UX/HUD.swift"
    "FlowViz/Core/VelocityGrid.swift"
    "FlowViz/Data/scenes.json"
)

missing_files=()
for file in "${required_files[@]}"; do
    if [ ! -f "$file" ]; then
        missing_files+=("$file")
    fi
done

if [ ${#missing_files[@]} -ne 0 ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Missing files:${NC}"
    for file in "${missing_files[@]}"; do
        echo "   - $file"
    done
    echo ""
    echo "Run the setup script first to copy all source files."
    exit 1
fi

echo -e "${GREEN}‚úÖ All required files found${NC}"

# Try to build the project
echo -e "${BLUE}üî® Testing build...${NC}"
if xcodebuild -project FlowViz.xcodeproj -scheme FlowViz -configuration Debug build -quiet; then
    echo -e "${GREEN}‚úÖ Build successful!${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Build failed. Opening Xcode to investigate...${NC}"
fi

echo ""
echo -e "${BLUE}üöÄ Opening FlowViz in Xcode...${NC}"
open FlowViz.xcodeproj

echo ""
echo -e "${GREEN}üìñ Testing Instructions:${NC}"
echo "========================"
echo ""
echo "1. üéØ BASIC TESTING:"
echo "   ‚Ä¢ Press ‚åòR to build and run"
echo "   ‚Ä¢ You should see a dark interface with controls"
echo "   ‚Ä¢ Green dot (start) and red dot (goal) should be visible"
echo ""
echo "2. üéÆ INTERACTION TESTING:"
echo "   ‚Ä¢ Click anywhere to add obstacles (red circles)"
echo "   ‚Ä¢ Drag the green/red dots to move start/goal"
echo "   ‚Ä¢ Use the controls panel on the right"
echo "   ‚Ä¢ Try different scene presets"
echo ""
echo "3. üé® VISUAL TESTING:"
echo "   ‚Ä¢ Particles should appear as flowing blue/pink dots"
echo "   ‚Ä¢ Smooth 60 FPS animation (check HUD)"
echo "   ‚Ä¢ Controls should be responsive"
echo ""
echo "4. üß™ SWIFTUI PREVIEWS:"
echo "   ‚Ä¢ Open ContentView.swift"
echo "   ‚Ä¢ Press ‚å•‚åò‚Ü© to show Canvas"
echo "   ‚Ä¢ Test individual components"
echo ""
echo "5. üêõ IF SOMETHING DOESN'T WORK:"
echo "   ‚Ä¢ Check Console.app for errors"
echo "   ‚Ä¢ Try different macOS versions (needs 13.0+)"
echo "   ‚Ä¢ Test on different Macs if available"
echo ""
echo -e "${YELLOW}üí° TIP: The UI works without ML models!${NC}"
echo "   The app uses procedural flow fields for testing."
echo ""
echo -e "${BLUE}üìö For detailed testing info, see: TESTING.md${NC}"
echo ""
echo -e "${GREEN}üéâ Happy testing!${NC}"
